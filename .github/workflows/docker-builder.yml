name: build

on: [push, workflow_dispatch]

# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  matrix-builder:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Extract matrix
      id: set-matrix
      run: |
        TERM=xterm bash .github/ci_builder.sh
        echo "::set-output name=matrix::$(cat matrix.json)"

  isaac-ros-base:
    runs-on: self-hosted
    steps:
    - name: Extract tag name
      id: extract_tag
      shell: bash
      run: |
        if ${{ startsWith(github.ref, 'refs/tags/') }} ; then
          echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
        else
          echo ::set-output name=tag::${GITHUB_REF/refs\/heads\//}
        fi
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Docker info
      shell: bash
      run: docker info
    - name: "Build docker 00-isaac_ros_base"
      run: |
        echo "run 00-isaac_ros_base"
        TERM=xterm bash scripts/build_docker.sh 00-isaac_ros_base -ci
    - name: Login to DockerHub
      uses: docker/login-action@v1.12.0 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker
      shell: bash
      id: docker_push
      run: |
        BRANCH_NAME=${{ steps.extract_tag.outputs.tag }}
        TERM=xterm bash scripts/build_docker.sh 00-isaac_ros_base --push --branch $BRANCH_NAME
    - name: Push Latest Docker
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        BRANCH_NAME=${{ steps.extract_tag.outputs.tag }}
        TERM=xterm bash scripts/build_docker.sh 00-isaac_ros_base --push --branch $BRANCH_NAME --latest

  isaac-ros-tutorial:
    needs: [matrix-builder, isaac-ros-base]
    runs-on: self-hosted
    strategy:
      matrix: ${{fromJson(needs.matrix-builder.outputs.matrix)}} #variable: project
    steps:
    - name: Extract tag name
      id: extract_tag
      shell: bash
      run: |
        if ${{ startsWith(github.ref, 'refs/tags/') }} ; then
          echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
        else
          echo ::set-output name=tag::${GITHUB_REF/refs\/heads\//}
        fi
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Docker info
      shell: bash
      run: docker info
    - name: "Build docker ${{ matrix.project }}"
      run: |
        echo "run ${{ matrix.project }}"
        TERM=xterm bash scripts/build_docker.sh ${{ matrix.project }} -ci
    - name: Login to DockerHub
      uses: docker/login-action@v1.12.0 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker
      shell: bash
      id: docker_push
      run: |
        BRANCH_NAME=${{ steps.extract_tag.outputs.tag }}
        TERM=xterm bash scripts/build_docker.sh ${{ matrix.project }} --push --branch $BRANCH_NAME
    - name: Push Latest Docker
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        BRANCH_NAME=${{ steps.extract_tag.outputs.tag }}
        TERM=xterm bash scripts/build_docker.sh ${{ matrix.project }} --push --branch $BRANCH_NAME --latest

  make_release:
    name: Upload release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [isaac-ros-tutorial]
    steps:
    - name: Extract tag name
      id: extract_tag
      shell: bash
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
    - name: Release # https://github.com/softprops/action-gh-release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.extract_tag.outputs.tag }}
        generate_release_notes: true
        draft: false
        prerelease: false